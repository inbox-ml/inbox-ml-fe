/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import type { CreateFileRoute, FileRoutesByPath } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/signUp'
import { Route as SignInRouteImport } from './routes/signIn'
import { Route as MainRouteImport } from './routes/main'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MainIndexRouteImport } from './routes/main/index'
import { Route as MainNewMailRouteImport } from './routes/main/newMail'

const SignUpRoute = SignUpRouteImport.update({
  id: '/signUp',
  path: '/signUp',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/signIn',
  path: '/signIn',
  getParentRoute: () => rootRouteImport,
} as any)
const MainRoute = MainRouteImport.update({
  id: '/main',
  path: '/main',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MainIndexRoute = MainIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => MainRoute,
} as any)
const MainNewMailRoute = MainNewMailRouteImport.update({
  id: '/newMail',
  path: '/newMail',
  getParentRoute: () => MainRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/main': typeof MainRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/main/newMail': typeof MainNewMailRoute
  '/main/': typeof MainIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/main/newMail': typeof MainNewMailRoute
  '/main': typeof MainIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/main': typeof MainRouteWithChildren
  '/signIn': typeof SignInRoute
  '/signUp': typeof SignUpRoute
  '/main/newMail': typeof MainNewMailRoute
  '/main/': typeof MainIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/main' | '/signIn' | '/signUp' | '/main/newMail' | '/main/'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/signIn' | '/signUp' | '/main/newMail' | '/main'
  id:
    | '__root__'
    | '/'
    | '/main'
    | '/signIn'
    | '/signUp'
    | '/main/newMail'
    | '/main/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  MainRoute: typeof MainRouteWithChildren
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main': {
      id: '/main'
      path: '/main'
      fullPath: '/main'
      preLoaderRoute: typeof MainRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signIn': {
      id: '/signIn'
      path: '/signIn'
      fullPath: '/signIn'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signUp': {
      id: '/signUp'
      path: '/signUp'
      fullPath: '/signUp'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/main/newMail': {
      id: '/main/newMail'
      path: '/newMail'
      fullPath: '/main/newMail'
      preLoaderRoute: typeof MainNewMailRouteImport
      parentRoute: typeof MainRoute
    }
    '/main/': {
      id: '/main/'
      path: '/'
      fullPath: '/main/'
      preLoaderRoute: typeof MainIndexRouteImport
      parentRoute: typeof MainRoute
    }
  }
}

declare module './routes/index' {
  const createFileRoute: CreateFileRoute<
    '/',
    FileRoutesByPath['/']['parentRoute'],
    FileRoutesByPath['/']['id'],
    FileRoutesByPath['/']['path'],
    FileRoutesByPath['/']['fullPath']
  >
}
declare module './routes/main' {
  const createFileRoute: CreateFileRoute<
    '/main',
    FileRoutesByPath['/main']['parentRoute'],
    FileRoutesByPath['/main']['id'],
    FileRoutesByPath['/main']['path'],
    FileRoutesByPath['/main']['fullPath']
  >
}
declare module './routes/signIn' {
  const createFileRoute: CreateFileRoute<
    '/signIn',
    FileRoutesByPath['/signIn']['parentRoute'],
    FileRoutesByPath['/signIn']['id'],
    FileRoutesByPath['/signIn']['path'],
    FileRoutesByPath['/signIn']['fullPath']
  >
}
declare module './routes/signUp' {
  const createFileRoute: CreateFileRoute<
    '/signUp',
    FileRoutesByPath['/signUp']['parentRoute'],
    FileRoutesByPath['/signUp']['id'],
    FileRoutesByPath['/signUp']['path'],
    FileRoutesByPath['/signUp']['fullPath']
  >
}
declare module './routes/main/newMail' {
  const createFileRoute: CreateFileRoute<
    '/main/newMail',
    FileRoutesByPath['/main/newMail']['parentRoute'],
    FileRoutesByPath['/main/newMail']['id'],
    FileRoutesByPath['/main/newMail']['path'],
    FileRoutesByPath['/main/newMail']['fullPath']
  >
}
declare module './routes/main/index' {
  const createFileRoute: CreateFileRoute<
    '/main/',
    FileRoutesByPath['/main/']['parentRoute'],
    FileRoutesByPath['/main/']['id'],
    FileRoutesByPath['/main/']['path'],
    FileRoutesByPath['/main/']['fullPath']
  >
}

interface MainRouteChildren {
  MainNewMailRoute: typeof MainNewMailRoute
  MainIndexRoute: typeof MainIndexRoute
}

const MainRouteChildren: MainRouteChildren = {
  MainNewMailRoute: MainNewMailRoute,
  MainIndexRoute: MainIndexRoute,
}

const MainRouteWithChildren = MainRoute._addFileChildren(MainRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  MainRoute: MainRouteWithChildren,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
